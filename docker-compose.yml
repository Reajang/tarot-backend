version: '3.7'

services:
  postgres:
#    image: leonidgarin/astana-postgres:v2.0.0
    build:
      context: infra/postgres
      dockerfile: Dockerfile
    environment:
      POSTGRES_PASSWORD: postgres
      TZ: Europe/Moscow
    healthcheck:
      interval: 10s
      retries: 10
      start_period: 45s
      test: pg_isready -U postgres && nc -z localhost 5432
      timeout: 10s
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data:rw

  backend:
    image: leonidgarin/astana-backend:v2.0.0
#    build:
#      context: .
#      dockerfile: docker/Dockerfile
    environment:
      spring.datasource.url: jdbc:postgresql://postgres:5432/astana
      spring.flyway.url: jdbc:postgresql://postgres:5432/astana
    ports:
      - "8080:8080"
      - "9090:9090"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  ui:
    image: leonidgarin/astana-ui:v2.0.0
#    build:
#      context: ../ui/astana-ui
#      dockerfile: docker/Dockerfile
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    environment:
      BACKEND_UPSTREAM: host.docker.internal:8080
    ports:
      - "80:80"
    restart: unless-stopped

volumes:
  pgdata: { }
